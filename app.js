// Generated by CoffeeScript 1.9.3
var addClass, dragMove, removeClass, setupDropzone;

dragMove = function(event) {
  var target, x, y;
  target = event.target;
  x = (parseFloat(event.target.getAttribute('data-x')) || 0) + event.dx;
  y = (parseFloat(event.target.getAttribute('data-y')) || 0) + event.dy;
  target.style.left = x + 'px';
  target.style.top = y + 'px';
  target.setAttribute('data-x', x);
  return target.setAttribute('data-y', y);
};

addClass = function(element, className) {
  if (element.classList) {
    return element.classList.add(className);
  } else {
    element.className += ' ' + className;
  }
};

removeClass = function(element, className) {
  if (element.classList) {
    return element.classList.remove(className);
  } else {
    element.className = element.className.replace(new RegExp(className + ' *', 'g'), '');
  }
};

setupDropzone = function(el, accept) {
  interact(el).dropzone({
    accept: accept,
    ondropactivate: function(event) {
      addClass(event.relatedTarget, '-drop-possible');
    },
    ondropdeactivate: function(event) {
      removeClass(event.relatedTarget, '-drop-possible');
    }
  }).on('dropactivate', function(event) {
    var active;
    event.relatedTarget.blockName = event.relatedTarget.textContent;
    active = event.target.getAttribute('active') | 0;
    if (active === 0) {
      addClass(event.target, '-drop-possible');
      addClass(event.relatedTarget, '-drop-possible');
      event.target.textContent = 'Drop here!';
      event.target.setAttribute('active', active + 1);
    }
  }).on('dropdeactivate', function(event) {
    var active;
    active = event.target.getAttribute('active') | 0;
    if (active === 1) {
      removeClass(event.target, '-drop-possible');
      event.target.textContent = 'Dropzone';
      event.target.setAttribute('active', active - 1);
    }
  }).on('dragenter', function(event) {
    addClass(event.target, '-drop-over');
    console.log('I\'m in');
  }).on('dragleave', function(event) {
    removeClass(event.target, '-drop-over');
    removeClass(event.relatedTarget, '-drop-over');
    console.log('I\'m out');
  }).on('drop', function(event) {
    removeClass(event.target, '-drop-over');
    addClass(event.relatedTarget, '-drop-over');
    console.log('Dropped');
  });
};

interact('.draggable').draggable({
  onmove: function(event) {
    return dragMove(event);
  },
  restrict: {
    restriction: 'body',
    endOnly: true,
    elementRect: {
      top: 0,
      left: 0,
      bottom: 1,
      right: 1
    }
  },
  axis: 'xy',
  max: Infinity,
  maxPerElement: 2,
  inertia: true
}, setupDropzone('.dropzone', '.draggable'));

interact('.body');
